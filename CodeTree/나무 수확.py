# 나무 수확
# 실력체크
# 정답률 34% · 제출 1,244회 · 예상 소요 시간 18분

# 1
# 아쉬워요
# 남우는 나무를 잘 키워내 최대로 열매를 수확하려고 합니다. n \times nn×n 크기의 격자 내 각 칸에 씨앗이 정확히 하나씩 들어가 있고, 각 칸에 있는 씨앗을 키웠을 때 얻을 수 있는 열매 수확량이 주어집니다. 다음은 nn이 3인 경우의 예시입니다.





# 씨앗을 키우기 위해서는 수로를 설치해야 합니다. 이때 비용 때문에 가장 좌측 위에 있는 (1, 1) 위치에서부터 수로 설치를 시작하여, 인접한 오른쪽 혹은 아래쪽 중 한곳을 선택하여 이동하여 정확히 (nn, nn) 위치를 끝으로 수로 설치를 마쳐야만 합니다. 예로 다음과 같이 수로 설치를 진행할 수 있습니다.





# 수로 설치가 완료되면 설치한 수로 중 원하는 칸 하나를 골라 그 위치에 스프링클러를 놓을 수 있습니다. 스프링클러가 놓인 칸의 경우 씨앗으로부터 얻을 수 있는 열매 수확량을 2배로 늘릴 수 있습니다. 만약 수로를 놓은 (1행, 3열)을 선택하게 된다면 다음과 같이 해당 칸의 열매 수확량이 6이 됩니다. 이렇게 수로와 스프링클러를 설치하게 되면 해당 칸들의 나무가 자라게 되어 최종적으로 얻게 되는 총 열매 수확량은 14(=1 + 3 + 6 + 3 + 1)가 됩니다.





# 만약 처음 그림에서 다음과 같이 수로와 스프링클러를 설치하게 되면, 총 15(=1+2+10+1+1)만큼 열매 수확을 할 수 있게 됩니다.





# 초기 격자의 상태가 주어졌을 때 수로와 스프링클러를 적절하게 설치하여 얻을 수 있는 열매 수확량의 합을 최대로 만드는 프로그램을 작성해보세요.

# 입력 형식
# 첫 번째 줄에는 격자의 크기를 나타내는 nn이 주어집니다.
# 두 번째 줄 부터는 nn개의 줄에 걸쳐 각 행에 해당하는 열매 수확량 nn개가 공백을 사이에 두고 주어집니다.

# 2 ≤ nn ≤ 1,000
# 1 ≤ 열매 수확량 ≤ 1,000
# 출력 형식
# 첫 번째 줄에 수로와 스프링클러를 잘 설치하여 얻을 수 있는 열매 수확량의 합 중 최댓값을 출력합니다. 스프링클러는 꼭 설치된 수로 위에만 놓을 수 있음에 유의합니다.

# 입출력 예제
# 예제1
# 입력:

# 3
# 1 3 3
# 2 1 3
# 5 1 1
# 출력:

# 15
# 예제2
# 입력:

# 3
# 1 4 4
# 2 1 4
# 5 1 1
# 출력:

# 18
# 예제3
# 입력:

# 4
# 5 5 4 6
# 3 5 4 5
# 6 5 5 5
# 5 5 5 5
# 출력:

# 41
# 제한
# 시간 제한: 1000ms
# 메모리 제한: 80MB
n=int(input())
grid=[list(map(int, input().split())) for _ in range(n)]
dp=[[[0 for _ in range(2)] for _ in range(n)] for _ in range(n)]
dp[0][0][0], dp[0][0][1]=grid[0][0], grid[0][0]*2
for i in range(n):
    for j in range(n):
        if i==j==0:
            continue
        dp[i][j][1]=max(dp[i-1][j][0], dp[i][j-1][0])+grid[i][j]*2
        for k in range(2):
            dp[i][j][k]=max(dp[i][j][k], max(dp[i-1][j][k], dp[i][j-1][k])+grid[i][j])
print(dp[n-1][n-1][1])
