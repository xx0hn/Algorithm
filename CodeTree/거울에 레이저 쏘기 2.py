# 거울에 레이저 쏘기 2
# N * N 크기의 격자 안에 각 칸마다 거울이 하나씩 들어 있습니다. 각 거울은 ‘\'나 '/’의 형태를 띄고있고, 격자 밖 4N개의 위치 중 특정 위치에서 레이저를 쏘았을 때, 거울에 튕기는 횟수를 구하는 프로그램을 작성해보세요.

# 입력 형식
# 첫 번째 줄에 N이 주어집니다.

# 두 번째 줄부터 N개의 줄에 걸쳐 맵의 정보가 주어집니다. 각 줄에는 각 행에 해당하는 정보가 공백없이 주어집니다. 이는 '/'나 '\' 문자로만 이루어져 있습니다.

# 그 다음 줄에는 레이저를 쏘는 위치 K가 주어집니다. K는 다음과 같이 위에서 아래 방향으로 1행 1열 칸으로 들어오는 곳을 1번으로 하여 시계 방향으로 돌며 가능한 시작 위치에 순서대로 번호를 붙여 4N 번을 마지막으로 했을 때의 번호들 중 하나의 값으로 주어집니다.



# 1 ≤ N ≤ 1,000
# 1 ≤ K ≤ 4N
# 출력 형식
# 주어진 위치를 잡아 레이저를 쐈을 때 거울에 튕기는 횟수를 출력합니다.

# 입출력 예제
# 예제1
# 입력:

# 3
# /\\
# \\\
# /\/
# 2
# 출력:

# 3
# 예제 설명
# 아래와 같이 2번 위치에서 시작하면 총 3번 튕기게 됩니다.



# Hint
# 문자 /의 표현은 '/' 로 가능하지만, \는 Escape String이 필요하므로 문자 \의 표현은 '\\'로 해야 올바르게 동작합니다.

# 제한
# 시간 제한: 1000ms
# 메모리 제한: 80MB
n=int(input())
grid=[str(input()) for _ in range(n)]
start=int(input())-1
dy=[1, 0, -1, 0]
dx=[0, -1, 0, 1]
# 0: S, 1: W, 2: N, 3: E
d=(start)//n
if d==0:
    y, x=0, start%n
elif d==1:
    y, x=start%n, n-1
elif d==2:
    y, x=n-1, n-1-(start)%n
else:
    y, x=n-1-(start)%n, 0
cnt=1
def move(y, x, d):
    global cnt
    if d==0 or d==2:
        if grid[y][x]=='/':
            d=(d+1)%4
        else:
            d=(d+3)%4
    elif d==1 or d==3:
        if grid[y][x]=='/':
            d=(d+3)%4
        else:
            d=(d+1)%4
    y+=dy[d]
    x+=dx[d]
    if 0<=y<n and 0<=x<n:
        cnt+=1
        move(y, x, d)
move(y, x, d)
print(cnt)
