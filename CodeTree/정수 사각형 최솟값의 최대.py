# 정수 사각형 최솟값의 최대
# 실력체크
# 정답률 29% · 제출 1,265회 · 예상 소요 시간 37분

# 추천해요
# 아쉬워요
# ko-kr
# N*N 행렬이 주어졌을 때, (1, 1)에서 시작하여 오른쪽 혹은 밑으로만 이동하여 (N, N)으로 간다고 했을 때 거쳐간 위치에 적혀있는 숫자들 중 최솟값을 최대로 하는 프로그램을 작성해보세요.

# 입력 형식
# 첫째 줄에는 N이 주어집니다.

# 두 번째 줄 부터 N개의 줄에 각각 각 행에 해당하는 N개의 정수 값이 공백을 사이에 두고 주어집니다.

# 1 ≤ N ≤ 100

# 1 ≤ 행렬에 주어지는 숫자 ≤ 1,000,000

# 출력 형식
# 가능한 경로의 숫자들 중 최솟값의 최댓값을 출력합니다.

# 입출력 예제
# 예제1
# 입력:

# 3
# 5 2 3
# 3 2 1
# 1 2 4
# 출력:

# 2
# 예제2
# 입력:

# 3
# 4 3 2
# 3 4 5
# 4 2 8
# 출력:

# 3
# 예제 설명
# 첫 번째 예제의 경우 다음과 같이 이동하면 지나는 경로에 적혀있는 숫자들 중 최솟값이 2가 되며, 더 크게 답을 만들 수가 없습니다.



# 제한
# 시간 제한: 1000ms
# 메모리 제한: 80MB
import copy
n=int(input())
grid=[list(map(int, input().split())) for _ in range(n)]
dp=copy.deepcopy(grid)
dp[0][0]=grid[0][0]
for i in range(1, n):
    dp[i][0]=min(dp[i-1][0], grid[i][0])
for i in range(1, n):
    dp[0][i]=min(dp[0][i-1], grid[0][i])
for i in range(1, n):
    for j in range(1, n):
        tmp=max(dp[i-1][j], dp[i][j-1])
        dp[i][j]=min(tmp, dp[i][j])
print(dp[n-1][n-1])
