# 벽 짚고 미로 탈출하기
# N*N 크기의 격자 안에서 주어진 위치에서 우측 방향을 바라보고 시작하여 오른쪽 벽을 짚고 쭉 따라가는 방식으로 미로를 탈출하는 프로그램을 작성해보세요. 규칙에 맞게 이동하다 격자 밖을 벗어났을 때 미로를 탈출 한 것으로 봅니다.

# 벽을 짚고 탈출하는 방식은 다음과 같습니다.

# 바라보고 있는 방향으로 이동하는 것이 가능하지 않은 경우

# 반 시계 방향으로 90' 만큼 방향을 바꿉니다.


# 바라보고 있는 방향으로 이동하는 것이 가능한 경우

# 바로 앞이 격자 밖이라면 이동하여 탈출합니다.



# 만약 그 방향으로 이동했다 가정했을 때 해당 방향을 기준으로 오른쪽에 짚을 벽이 있다면 그 방향으로 한 칸 이동합니다.



# 만약 그 방향으로 이동했다 가정했을 때 해당 방향을 기준으로 오른쪽에 벽이 존재하지 않는다면, 현재 방향으로 한 칸 이동 후 방향을 시계 방향으로 90' 만큼 방향을 틀어 한 칸 더 전진하여 오른쪽에 벽이 있게끔 합니다.



# 이러한 과정을 반복하게 됩니다.

# 다음은 탈출을 하게 되는 예시 중 하나 입니다.



# 입력 형식
# 첫째 줄에는 격자의 크기를 나타내는 양의 정수 N이 주어집니다.

# 둘째 줄에는 시작 위치 (x, y)가 주어집니다. x번째 행, y번째 열에서 시작함을 의미합니다. (1 ≤ x < N, 1 ≤ y ≤ N)

# 다음 N개의 줄에 걸쳐 각 행마다 미로의 모습을 나타내는 문자 N개가 공백없이 주어집니다. 해당 위치에 벽이 있는 경우에는 ‘#' 문자가, 벽이 없다면 '.’ 문자가 주어집니다.

# 시작 위치 (x, y)에는 벽이 절대 주어지지 않고, (x+1, y) 위치에는 항상 벽이 주어진다고 가정해도 좋습니다.

# 2 ≤ N ≤ 100
# 출력 형식
# 방향을 트는 데에는 시간이 걸리지 않고 한 번 이동하는 데에는 1초의 시간이 걸린다고 했을 때, 미로를 탈출하는 데 걸리는 시간을 출력합니다. 오른쪽 벽을 짚고 따라가는 방식만으로 미로를 탈출하는 것이 불가능하다면 -1을 출력해주세요.

# 입출력 예제
# 예제1
# 입력:

# 3
# 1 1
# .#.
# #..
# ...
# 출력:

# 1
# 예제2
# 입력:

# 3
# 1 1
# ...
# ##.
# ...
# 출력:

# 7
# 예제3
# 입력:

# 3
# 1 1
# ...
# #..
# ...
# 출력:

# 5
# 예제4
# 입력:

# 3
# 1 2
# ...
# .#.
# ...
# 출력:

# -1
# 제한
# 시간 제한: 1000ms
# 메모리 제한: 80MB
n=int(input())
y, x=map(int, input().split())
y, x=y-1, x-1
grid=[str(input()) for _ in range(n)]
time=0
visited=[[[False for _ in range(4)] for _ in range(n)] for _ in range(n)]
dy, dx=[0, 1, 0, -1], [1, 0, -1, 0]
d=0
def move():
    global y, x, d, time
    if visited[y][x][d]:
        print(-1)
        quit()
    visited[y][x][d]=True
    ny, nx=y+dy[d], x+dx[d]
    if 0<=ny<n and 0<=nx<n and grid[ny][nx]=='#':
        d=(d+3)%4
    elif not (0<=ny<n and 0<=nx<n):
        y, x=ny, nx
        time+=1
    else:
        if 0<=ny+dy[(d+1)%4]<n and 0<=nx+dx[(d+1)%4]<n and grid[ny+dy[(d+1)%4]][nx+dx[(d+1)%4]]=='#':
            y, x=ny, nx
            time+=1
        else:
            y, x=ny+dy[(d+1)%4], nx+dx[(d+1)%4]
            d=(d+1)%4
            time+=2
while 0<=y<n and 0<=x<n:
    move()
print(time)
