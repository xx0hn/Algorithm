# 빙빙 돌며 숫자 사각형 채우기 2
# n * m크기의 직사각형에 숫자 1부터 순서대로 증가시키며 달팽이 모양으로 채우는 코드를 작성해보세요.

# 달팽이 모양이란 왼쪽 위 모서리에서 시작해서, 아래, 오른쪽, 위쪽, 왼쪽 순서로 더 이상 채울 곳이 없을 때까지 회전하는 모양을 의미합니다.

# n : 행(row), m : 열(column)을 의미합니다.



# 입력 형식
# n과 m이 공백을 사이에 두고 주어집니다.

# 1 ≤ n, m ≤ 100
# 출력 형식
# 숫자로 채워진 완성된 형태의 n * m 크기의 사각형을 출력합니다.

# (숫자끼리는 공백을 사이에 두고 출력합니다.)

# 입출력 예제
# 예제1
# 입력:

# 4 4
# 출력:

# 1 12 11 10
# 2 13 16 9 
# 3 14 15 8 
# 4 5 6 7
# 예제2
# 입력:

# 4 2
# 출력:

# 1 8 
# 2 7 
# 3 6 
# 4 5
# 제한
# 시간 제한: 1000ms
# 메모리 제한: 80MB
n, m=map(int, input().split())
grid=[[0 for _ in range(m)] for _ in range(n)]
grid[0][0]=1
dy=[1, 0, -1, 0]
dx=[0, 1, 0, -1]
y, x, d=0, 0, 0
for i in range(2, n*m+1):
    ny=y+dy[d]
    nx=x+dx[d]
    if not (0<=ny<n and 0<=nx<m) or grid[ny][nx]!=0:
        d=(d+1)%4
        ny=y+dy[d]
        nx=x+dx[d]
    grid[ny][nx]=i
    y, x=ny, nx
for i in range(n):
    print(*grid[i])
